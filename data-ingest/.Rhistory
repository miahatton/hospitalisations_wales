filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Betsi Cadwaladr University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_bc
head(beds_bc)
write.csv(beds_bc, 'data/bed_use_betsi_cadwaladr.csv', row.names = F)
beds_percent_covid <- read_csv('data/beds_percent_covid.csv')
beds <- beds_percent_covid %>%
select(-percent_beds_in_use_covid)%>%
mutate(date = as.Date(date)) %>%
arrange(health_board, date)
head(beds)
lockdown_info <- read_csv('data/lockdowns_health_boards.csv')
lockdown_info$date <- mapvalues(
lockdown_info$date,
"01/07/2020",
"01/04/2020"
)
head(lockdown_info)
lockdown_info %>%
mutate(date = as.Date(date, "%d/%m/%Y")) -> lockdown_info
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
# propagate values
for (i in 1:nrow(beds_lockdowns)) {
if (is.na(beds_lockdowns$prop_lockdown[i])) beds_lockdowns$prop_lockdown[i] <- beds_lockdowns$prop_lockdown[i-1]
}
beds_lockdowns %>%
select(-num_lockdown) %>%
select(-hb_pop) -> beds_lockdowns
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date > as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)
) -> beds_lockdowns
write.csv(beds_lockdowns, 'data/lockdown_status_hb_date.csv', row.names = FALSE)
head(beds_lockdowns)
tail(beds_lockdowns)
lockdown_info %>%
filter(str_detect(health_board, 'Aneurin') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_ab.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Betsi') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_bc.csv', row.names = F)
hospitalisations <- read_csv('data/hospitalisations_hb_long_unfiltered.csv')
admissions <- read_csv('data/admissions_hb_long_unfiltered.csv')
head(hospitalisations)
hospitalisations %>%
filter(admission_type != 'All' & admission_type != 'NonC19' & covid_status != 'All') %>%
select(-admission_type) %>%
pivot_wider(id_cols = c(date, health_board), names_from = covid_status, values_from = count) %>%
mutate(total_hospitalisations = Confirmed + Suspected + ifelse(is.na(Recovering), 0, Recovering)) -> hospitalisations_wide
admissions %>%
filter(admission_type == 'C19') %>%
select(date, health_board, new_admissions = count) %>%
right_join(hospitalisations_wide, by = c("date", "health_board")) %>%
arrange(health_board, date) %>%
mutate(prev_day_beds_occupied = lag(total_hospitalisations)) %>%
select(date, health_board, Suspected, Confirmed, Recovering, total_hospitalisations, new_admissions, prev_day_beds_occupied) %>%
mutate(difference = total_hospitalisations - prev_day_beds_occupied - new_admissions) -> admissions_hospitalisations
admissions_hospitalisations
write.csv(admissions_hospitalisations, 'data/admissions_hospitalisations_change.csv', row.names = F)
admissions_hospitalisations %>%
filter(!is.na(Recovering))
write.csv(beds_lockdowns, 'data/lockdown_status_hb_date.csv', row.names = FALSE)
tail(beds_percent_covid)
View(beds_lockdowns)
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
beds_percent_covid <- read_csv('data/beds_percent_covid.csv')
beds <- beds_percent_covid %>%
select(-percent_beds_in_use_covid)%>%
mutate(date = as.Date(date)) %>%
arrange(health_board, date)
head(beds)
lockdown_info <- read_csv('data/lockdowns_health_boards.csv')
lockdown_info$date <- mapvalues(
lockdown_info$date,
"01/07/2020",
"01/04/2020"
)
head(lockdown_info)
lockdown_info %>%
mutate(date = as.Date(date, "%d/%m/%Y")) -> lockdown_info
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
# propagate values
for (i in 1:nrow(beds_lockdowns)) {
if (is.na(beds_lockdowns$prop_lockdown[i])) beds_lockdowns$prop_lockdown[i] <- beds_lockdowns$prop_lockdown[i-1]
}
beds_lockdowns %>%
select(-num_lockdown) %>%
select(-hb_pop) -> beds_lockdowns
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)
) -> beds_lockdowns
write.csv(beds_lockdowns, 'data/lockdown_status_hb_date.csv', row.names = FALSE)
head(beds_lockdowns)
tail(beds_lockdowns)
lockdown_info %>%
filter(str_detect(health_board, 'Aneurin') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_ab.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Betsi') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_bc.csv', row.names = F)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_ct
head(beds_ct)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf University Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_ct
head(beds_ct)
unique(df.LocalHealthBoard_ItemName_ENG)
unique(df$LocalHealthBoard_ItemName_ENG)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf Morgannwg University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_ct
head(beds_ct)
write.csv(beds_bc, 'data/bed_use_cwm_taf.csv', row.names = F)
write.csv(beds_ct, 'data/bed_use_cwm_taf.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Cwm') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_bc.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Cwm') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_ct.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Betsi') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_bc.csv', row.names = F)
View(lockdown_info)
write.csv(beds_p, 'data/bed_use_powys.csv', row.names = F)
## Powys Teaching Local Health Board
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf Morgannwg University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_p
write.csv(beds_p, 'data/bed_use_powys.csv', row.names = F)
lockdown_info %>%
filter(str_detect(health_board, 'Powys') & prop_lockdown > 0) %>%
write.csv('data/lockdown_status_p.csv', row.names = F)
library(statswalesr)
library(plyr)
library(tidyverse)
df <- statswalesr::statswales_get_dataset("hlth0092")
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
select(
Date_Code, LocalHealthBoard_ItemName_ENG, Indicator_Code, Data
) -> beds
beds %>%
mutate(
Date = as.Date(Date_Code, "%Y%m%d"),
Count = as.integer(Data)
) %>%
select(Date, LocalHealthBoard_ItemName_ENG, Indicator_Code, Count) -> beds
beds %>% distinct(LocalHealthBoard_ItemName_ENG)
beds$LocalHealthBoard_ItemName_ENG <- mapvalues(
beds$LocalHealthBoard_ItemName_ENG,
unique(beds$LocalHealthBoard_ItemName_ENG),
c(
"Betsi Cadwaladr University Health Board",
"Hywel Dda University Health Board",
"Abertawe Bro Morgannwg University Health Board",
"Cardiff and Vale University Health Board",
"Cwm Taf University Health Board",
"Aneurin Bevan University Health Board",
"Velindre University NHS Trust",
"Wales",
"Powys Teaching Health Board"
)
)
beds %>%
dplyr::rename(health_board = LocalHealthBoard_ItemName_ENG) -> beds
head(beds)
write.csv(beds, 'data/beds_hb_long_unfiltered.csv', row.names = FALSE)
beds %>%
pivot_wider(id_cols = c(Date, health_board), names_from = Indicator_Code, values_from = Count) -> beds_pivot
head(beds_pivot)
beds_pivot %>%
mutate(
CO_GABed_Tot = CO_GABed_C19 + CO_GABed_NonC19 + CO_GABed_Spare,
CO_IVBed_Tot = CO_IVBed_C19 + CO_IVBed_NonC19 + CO_IVBed_Spare
) -> beds_pivot
head(beds_pivot)
beds_pivot %>%
select(Date, health_board, sort(names(beds_pivot)[3:10])) -> beds_pivot
write.csv(beds_pivot, 'data/beds_hb_wide_unfiltered.csv', row.names = F)
beds_pivot %>%
mutate(beds_total = CO_IVBed_Tot + CO_GABed_Tot) %>%
mutate(percent_beds_in_use_covid = ((CO_GABed_C19 + CO_IVBed_C19)) / beds_total) %>%
select(date = Date, health_board, percent_beds_in_use_covid) -> beds_percent_covid
write.csv(beds_percent_covid, 'data/beds_percent_covid.csv', row.names = FALSE)
head(beds_percent_covid)
tail(beds_percent_covid)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Aneurin Bevan University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_ab
head(beds_ab)
write.csv(beds_ab, 'data/bed_use_aneurin_bevan.csv', row.names = F)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Betsi Cadwaladr University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_bc
head(beds_bc)
write.csv(beds_bc, 'data/bed_use_betsi_cadwaladr.csv', row.names = F)
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf Morgannwg University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_ct
head(beds_ct)
write.csv(beds_ct, 'data/bed_use_cwm_taf.csv', row.names = F)
## Powys Teaching Local Health Board
df %>%
filter(HospitalType_Code == "NHS") %>%
filter(LocalHealthBoard_ItemName_ENG == "Cwm Taf Morgannwg University Local Health Board") %>%
filter(Indicator_Code %in% c(
"CO_GABed_C19_Con", "CO_GABed_C19_Sus", "CO_GABed_C19_Rec", "CO_GABed_NonC19", "CO_GABed_Spare", "CO_IVBed_C19_Sus", "CO_IVBed_C19_Con", "CO_IVBed_C19_Rec", "CO_IVBed_NonC19", "CO_IVBed_Spare"
)) %>%
mutate(date = as.Date(Date_Code, '%Y%m%d'), count = as.integer(Data)) %>%
select(date,indicator = Indicator_Code, count) -> beds_p
write.csv(beds_p, 'data/bed_use_powys.csv', row.names = F)
unique(df$LocalHealthBoard_ItemName_ENG)
beds_percent_covid <- read_csv('data/beds_percent_covid.csv')
library(statswalesr)
library(plyr)
library(tidyverse)
df <- statswalesr::statswales_get_dataset("hlth0091")
all_hosp_data <- df %>%
filter(Hospitaltype_Code == "NHS") %>%
select(
Date_Code, LocalHealthBoard_ItemName_ENG, Indicator_Code, Indicator_ItemName_ENG, Data
) %>%
mutate(
date = as.Date(Date_Code, "%Y%m%d"),
count = as.integer(Data)
) %>%
select(date, health_board = LocalHealthBoard_ItemName_ENG,
indicator_code = Indicator_Code,
indicator_name = Indicator_ItemName_ENG,
count)
unique(all_hosp_data$health_board)
all_hosp_data$health_board <- mapvalues(
all_hosp_data$health_board,
unique(all_hosp_data$health_board),
c(
"Betsi Cadwaladr University Health Board",
"Hywel Dda University Health Board",
"Abertawe Bro Morgannwg University Health Board",
"Cardiff and Vale University Health Board",
"Cwm Taf University Health Board",
"Aneurin Bevan University Health Board",
"Velindre University NHS Trust",
"Wales",
"Powys Teaching Health Board"
)
)
head(all_hosp_data)
unique(all_hosp_data$indicator_name)
admissions <- all_hosp_data %>%
filter(str_detect(indicator_name, ".*admissions.*")) %>%
separate(indicator_code, into = c(NA, NA, 'admission_type'),sep = '_', remove = TRUE) %>%
select(-indicator_name)
head(admissions)
write.csv(admissions, 'data/admissions_hb_long_unfiltered.csv', row.names = FALSE)
hosps <- all_hosp_data %>%
filter(str_detect(indicator_name, ".*ospitalisations.*"))  %>%
separate(indicator_code, into = c(NA, 'admission_type'),sep = 'Hosps_', remove = TRUE) %>%
select(-indicator_name) %>%
mutate(covid_status = ifelse(
admission_type == "All" | admission_type == "NonC19", NA,
ifelse(admission_type == "C19", "All",
ifelse( admission_type == "C19_Con", "Confirmed",
ifelse(admission_type == "C19_Sus", "Suspected",
ifelse(admission_type == "C19_Rec", "Recovering", NA))))
))
head(hosps)
write.csv(hosps, 'data/hospitalisations_hb_long_unfiltered.csv', row.names = FALSE)
lockdowns <- read_csv('data/lockdown_status_hb_date.csv')
head(lockdowns)
lockdowns %>%
mutate(date = as.Date(date, format = "%d/%m/%Y")) -> lockdowns
lockdowns %>%
mutate(date = as.Date(date, format = "%d/%m/%Y")) -> lockdowns
propagate <- function(df) {
for (i in 1:nrow(df)) {
if (is.na(df$lockdown_status[i])) {df$lockdown_status[i] <- df$lockdown_status[i-1]}
}
return(df)
}
admissions_ld <- left_join(admissions, lockdowns, by= c("date", "health_board")) %>%
arrange(health_board, date) %>%
select(date, health_board, lockdown_status, admission_type, count)
admissions_ld <- propagate(admissions_ld)
head(admissions_ld)
tail(admissions_ld)
write.csv(admissions_ld, 'data/admissions_hb_lockdowns_long_unfiltered.csv', row.names = FALSE)
hosps_ld <- left_join(hosps, lockdowns, by = c("date", "health_board")) %>%
arrange(health_board, date) %>%
select(date, health_board, lockdown_status, hosp_type = admission_type, covid_status, count)
head(hosps_ld)
tail(hosps_ld)
hosps_ld <- propagate(hosps_ld)
write.csv(hosps_ld, 'data/hospitalisations_hb_lockdowns_long_unfiltered.csv', row.names = FALSE)
beds_percent_covid <- read_csv('data/beds_percent_covid.csv')
beds <- beds_percent_covid %>%
select(-percent_beds_in_use_covid)%>%
mutate(date = as.Date(date)) %>%
arrange(health_board, date)
head(beds)
lockdown_info <- read_csv('data/lockdowns_health_boards.csv')
lockdown_info$date <- mapvalues(
lockdown_info$date,
"01/07/2020",
"01/04/2020"
)
head(lockdown_info)
lockdown_info %>%
mutate(date = as.Date(date, "%d/%m/%Y")) -> lockdown_info
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
# propagate values
for (i in 1:nrow(beds_lockdowns)) {
if (is.na(beds_lockdowns$prop_lockdown[i])) beds_lockdowns$prop_lockdown[i] <- beds_lockdowns$prop_lockdown[i-1]
}
beds_lockdowns %>%
select(-num_lockdown) %>%
select(-hb_pop) -> beds_lockdowns
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)
) -> beds_lockdowns
head(beds_lockdowns)
tail(beds_lockdowns)
write.csv(beds_lockdowns, 'data/lockdown_status_hb_date.csv', row.names = FALSE)
lockdown_info <- read_csv('data/lockdowns_health_boards.csv')
lockdown_info$date <- mapvalues(
lockdown_info$date,
"01/07/2020",
"01/04/2020"
)
head(lockdown_info)
lockdown_info %>%
mutate(date = as.Date(date, "%d/%m/%Y")) -> lockdown_info
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
# propagate values
for (i in 1:nrow(beds_lockdowns)) {
if (is.na(beds_lockdowns$prop_lockdown[i])) beds_lockdowns$prop_lockdown[i] <- beds_lockdowns$prop_lockdown[i-1]
}
beds_lockdowns %>%
select(-num_lockdown) %>%
select(-hb_pop) -> beds_lockdowns
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
) %>%
mutate(
proportion_lockdown = ifelse(
lockdown_status == 'Post-firebreak',
0,
prop_lockdown
)
)
) -> beds_lockdowns
head(beds_lockdowns)
tail(beds_lockdowns)
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)) %>%
mutate(
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)) %>%
mutate(
proportion_lockdown = ifelse(
lockdown_status == 'Post-firebreak',
0,
prop_lockdown
)
) -> beds_lockdowns
head(beds_lockdowns)
beds_percent_covid <- read_csv('data/beds_percent_covid.csv')
beds <- beds_percent_covid %>%
select(-percent_beds_in_use_covid)%>%
mutate(date = as.Date(date)) %>%
arrange(health_board, date)
head(beds)
lockdown_info <- read_csv('data/lockdowns_health_boards.csv')
lockdown_info$date <- mapvalues(
lockdown_info$date,
"01/07/2020",
"01/04/2020"
)
head(lockdown_info)
lockdown_info %>%
mutate(date = as.Date(date, "%d/%m/%Y")) -> lockdown_info
beds_lockdowns <- beds %>%
left_join(., lockdown_info, by = c(
"health_board" = "health_board",
"date" = "date"
))
head(beds_lockdowns)
# propagate values
for (i in 1:nrow(beds_lockdowns)) {
if (is.na(beds_lockdowns$prop_lockdown[i])) beds_lockdowns$prop_lockdown[i] <- beds_lockdowns$prop_lockdown[i-1]
}
beds_lockdowns %>%
select(-num_lockdown) %>%
select(-hb_pop) -> beds_lockdowns
beds_lockdowns %>%
mutate(
lockdown_status = case_when(
prop_lockdown == 0 ~ "No local lockdowns",
prop_lockdown > 0 & prop_lockdown < 2 ~ "Local lockdowns",
prop_lockdown == 2 & date < as.Date("2020-11-09", "%Y-%m-%d") ~ "Firebreak lockdown",
date >= as.Date("2020-11-09", "%Y-%m-%d") ~ "Post-firebreak"
)) %>%
mutate(
proportion_lockdown = ifelse(
lockdown_status == 'Post-firebreak',
0,
prop_lockdown
)
) -> beds_lockdowns
tail(beds_lockdowns)
write.csv(beds_lockdowns, 'data/lockdown_status_hb_date.csv', row.names = FALSE)
